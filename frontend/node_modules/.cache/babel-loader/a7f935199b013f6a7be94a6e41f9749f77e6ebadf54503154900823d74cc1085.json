{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\0- UT PGP AIML\\\\project-evans\\\\frontend\\\\src\\\\components\\\\AudioTranscriptionDashboard.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\n// frontend/src/components/AudioTranscriptionDashboards.tsx\nimport React, { useState, useRef } from \"react\";\nimport { useSpeechToText } from \"../hooks/useSpeechToText\";\n\n// ---- Interfaces ----\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//------------PDF Upload-----\nconst PdfUploadBox = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [msg, setMsg] = useState(\"\");\n  const handleUpload = async () => {\n    if (!file) {\n      setMsg(\"Please select a PDF.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const res = await fetch(\"http://localhost:8080/api/upload_pdf\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setMsg(data.message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: e => {\n        var _e$target$files;\n        return setFile(((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) || null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n// ---- Llama ----\n_s(PdfUploadBox, \"q04cYaWIdDlj7H87bsG3yEXPGs8=\");\n_c = PdfUploadBox;\nconst LlamaBox = ({\n  webTranscript,\n  whisperTranscript,\n  onClearAll\n}) => {\n  _s2();\n  const [llamaOutput, setLlamaOutput] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const [feedbackMsg, setFeedbackMsg] = useState(\"\");\n  const handleLlama = async () => {\n    if (!webTranscript && !whisperTranscript) {\n      alert(\"No transcript available!\");\n      return;\n    }\n    setLlamaOutput(\"Processing...\");\n    const formData = new FormData();\n    formData.append(\"audio\", new Blob(), \"blank.wav\");\n    formData.append(\"web_transcript\", webTranscript);\n    formData.append(\"whisper_transcript\", whisperTranscript);\n    const res = await fetch(\"http://localhost:8080/api/llama_use\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setLlamaOutput(data.final_transcript || \"[no output]\");\n  };\n  const handleClear = () => {\n    setLlamaOutput(\"\");\n    onClearAll();\n  };\n  const handleFeedbackSubmit = async () => {\n    const res = await fetch(\"http://localhost:8080/api/transcript_feedback\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        whisper_text: whisperTranscript,\n        llama_output: llamaOutput,\n        feedback\n      })\n    });\n    const data = await res.json();\n    setFeedbackMsg(data.message || \"Feedback submitted!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid #b10dc9\",\n      borderRadius: 8,\n      padding: 16,\n      width: 350,\n      marginBottom: 18\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Llama\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLlama,\n      children: \"Llama Transcribe (Enhance Whisper Transcription)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      style: {\n        marginLeft: 8\n      },\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: llamaOutput,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Llama Output (merged/refined)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Your feedback/correction here...\",\n      value: feedback,\n      onChange: e => setFeedback(e.target.value),\n      style: {\n        width: \"100%\",\n        minHeight: 40,\n        marginTop: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFeedbackSubmit,\n      style: {\n        marginTop: 4\n      },\n      children: \"Submit Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: feedbackMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n// ---- Web Speech ----\n_s2(LlamaBox, \"PxI646zE/4UjQrmI17vYlSW/H1E=\");\n_c2 = LlamaBox;\nconst WebSpeechBox = ({\n  webTranscript,\n  setWebTranscript\n}) => {\n  _s3();\n  const {\n    transcript,\n    listening,\n    startListening,\n    stopListening,\n    isBrowserSupported,\n    clearTranscript\n  } = useSpeechToText(\"en-US\");\n  React.useEffect(() => {\n    setWebTranscript(transcript);\n  }, [transcript, setWebTranscript]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid #0074d9\",\n      borderRadius: 8,\n      padding: 16,\n      width: 350,\n      marginBottom: 18\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Web Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startListening,\n      disabled: listening || !isBrowserSupported,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopListening,\n      disabled: !listening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearTranscript,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: webTranscript,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Web Speech Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n// ---- Whisper ----\n_s3(WebSpeechBox, \"oo5SYBgLEyCOzbtPlDuuMIQYS0M=\", false, function () {\n  return [useSpeechToText];\n});\n_c3 = WebSpeechBox;\nconst WhisperBox = ({\n  whisperTranscript,\n  setWhisperTranscript\n}) => {\n  _s4();\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [output, setOutput] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const handleStart = async () => {\n    setOutput(\"\");\n    setAudioBlob(null);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const recorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = recorder;\n    audioChunksRef.current = [];\n    recorder.ondataavailable = e => audioChunksRef.current.push(e.data);\n    recorder.onstop = () => {\n      const blob = new Blob(audioChunksRef.current, {\n        type: \"audio/wav\"\n      });\n      setAudioBlob(blob);\n      stream.getTracks().forEach(track => track.stop());\n    };\n    recorder.start();\n    setRecording(true);\n  };\n  const handleStop = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  const handleTranscribe = async () => {\n    if (!audioBlob) return alert(\"Record audio first!\");\n    setOutput(\"Transcribing...\");\n    const formData = new FormData();\n    formData.append(\"audio\", audioBlob, \"audio.wav\");\n    formData.append(\"web_transcript\", \"\");\n    const res = await fetch(\"http://localhost:8080/api/transcribe?use_webspeech=0&use_whisper=1&use_llama=0\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setOutput(data.whisper_transcript || data.final_transcript || \"[no output]\");\n    setWhisperTranscript(data.whisper_transcript || data.final_transcript || \"\");\n  };\n  const handleClear = () => {\n    setAudioBlob(null);\n    setOutput(\"\");\n    setWhisperTranscript(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid #2ecc40\",\n      borderRadius: 8,\n      padding: 16,\n      width: 350,\n      marginBottom: 18\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Whisper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      disabled: recording,\n      children: \"Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      disabled: !recording,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranscribe,\n      disabled: !audioBlob,\n      children: \"Transcribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: output,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Whisper Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      src: URL.createObjectURL(audioBlob)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n// ---- Main Layout ----\n_s4(WhisperBox, \"3humosjixi9bIaM3r+4k5Sped9E=\");\n_c4 = WhisperBox;\nconst AudioTranscriptionDashboard = () => {\n  _s5();\n  const [webTranscript, setWebTranscript] = useState(\"\");\n  const [whisperTranscript, setWhisperTranscript] = useState(\"\");\n  const handleClearAll = () => {\n    setWebTranscript(\"\");\n    setWhisperTranscript(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medical E.V.A.N.S\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Medical- Empathetic Voice-over Assistant for Nurturing Symptomatologist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PdfUploadBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transcription Components:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 16,\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(WebSpeechBox, {\n        webTranscript: webTranscript,\n        setWebTranscript: setWebTranscript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(WhisperBox, {\n        whisperTranscript: whisperTranscript,\n        setWhisperTranscript: setWhisperTranscript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(LlamaBox, {\n        webTranscript: webTranscript,\n        whisperTranscript: whisperTranscript,\n        onClearAll: handleClearAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 3\n  }, this);\n};\n_s5(AudioTranscriptionDashboard, \"CqjZgB6C6S4rFrPD5j5cF/NapAw=\");\n_c5 = AudioTranscriptionDashboard;\nexport default AudioTranscriptionDashboard;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"PdfUploadBox\");\n$RefreshReg$(_c2, \"LlamaBox\");\n$RefreshReg$(_c3, \"WebSpeechBox\");\n$RefreshReg$(_c4, \"WhisperBox\");\n$RefreshReg$(_c5, \"AudioTranscriptionDashboard\");","map":{"version":3,"names":["React","useState","useRef","useSpeechToText","jsxDEV","_jsxDEV","PdfUploadBox","_s","file","setFile","msg","setMsg","handleUpload","formData","FormData","append","res","fetch","method","body","data","json","message","style","marginBottom","children","type","accept","onChange","e","_e$target$files","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","LlamaBox","webTranscript","whisperTranscript","onClearAll","_s2","llamaOutput","setLlamaOutput","feedback","setFeedback","feedbackMsg","setFeedbackMsg","handleLlama","alert","Blob","final_transcript","handleClear","handleFeedbackSubmit","headers","JSON","stringify","whisper_text","llama_output","border","borderRadius","padding","width","marginLeft","value","readOnly","minHeight","marginTop","placeholder","_c2","WebSpeechBox","setWebTranscript","_s3","transcript","listening","startListening","stopListening","isBrowserSupported","clearTranscript","useEffect","disabled","_c3","WhisperBox","setWhisperTranscript","_s4","recording","setRecording","audioBlob","setAudioBlob","output","setOutput","mediaRecorderRef","audioChunksRef","handleStart","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","current","ondataavailable","push","onstop","blob","getTracks","forEach","track","stop","start","handleStop","handleTranscribe","whisper_transcript","controls","src","URL","createObjectURL","_c4","AudioTranscriptionDashboard","_s5","handleClearAll","display","gap","flexWrap","_c5","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/0- UT PGP AIML/project-evans/frontend/src/components/AudioTranscriptionDashboard.tsx"],"sourcesContent":["// frontend/src/components/AudioTranscriptionDashboards.tsx\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useSpeechToText } from \"../hooks/useSpeechToText\";\r\n\r\n// ---- Interfaces ----\r\ninterface WebSpeechBoxProps {\r\n  webTranscript: string;\r\n  setWebTranscript: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\ninterface WhisperBoxProps {\r\n  whisperTranscript: string;\r\n  setWhisperTranscript: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\ninterface LlamaBoxProps {\r\n  webTranscript: string;\r\n  whisperTranscript: string;\r\n  onClearAll: () => void;\r\n}\r\n\r\n//------------PDF Upload-----\r\nconst PdfUploadBox: React.FC = () => {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      setMsg(\"Please select a PDF.\");\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const res = await fetch(\"http://localhost:8080/api/upload_pdf\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    const data = await res.json();\r\n    setMsg(data.message);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/pdf\"\r\n        onChange={e => setFile(e.target.files?.[0] || null)}\r\n      />\r\n      <button onClick={handleUpload}>Upload PDF</button>\r\n      <div>{msg}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// ---- Llama ----\r\nconst LlamaBox: React.FC<LlamaBoxProps> = ({ webTranscript, whisperTranscript, onClearAll }) => {\r\n  const [llamaOutput, setLlamaOutput] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [feedbackMsg, setFeedbackMsg] = useState(\"\");\r\n\r\n  const handleLlama = async () => {\r\n    if (!webTranscript && !whisperTranscript) {\r\n      alert(\"No transcript available!\");\r\n      return;\r\n    }\r\n    setLlamaOutput(\"Processing...\");\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", new Blob(), \"blank.wav\");\r\n    formData.append(\"web_transcript\", webTranscript);\r\n    formData.append(\"whisper_transcript\", whisperTranscript);\r\n    const res = await fetch(\"http://localhost:8080/api/llama_use\", { method: \"POST\", body: formData });\r\n    const data = await res.json();\r\n    setLlamaOutput(data.final_transcript || \"[no output]\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setLlamaOutput(\"\");\r\n    onClearAll();\r\n  };\r\n\r\n  const handleFeedbackSubmit = async () => {\r\n    const res = await fetch(\"http://localhost:8080/api/transcript_feedback\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        whisper_text: whisperTranscript,\r\n        llama_output: llamaOutput,\r\n        feedback,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    setFeedbackMsg(data.message || \"Feedback submitted!\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid #b10dc9\", borderRadius: 8, padding: 16, width: 350, marginBottom: 18 }}>\r\n      <h3>Llama</h3>\r\n      <button onClick={handleLlama}>Llama Transcribe (Enhance Whisper Transcription)</button>\r\n      <button onClick={handleClear} style={{ marginLeft: 8 }}>Clear</button>\r\n      <br />\r\n      <textarea value={llamaOutput} readOnly style={{ width: \"100%\", minHeight: 60, marginTop: 8 }} placeholder=\"Llama Output (merged/refined)\" />\r\n      <textarea\r\n        placeholder=\"Your feedback/correction here...\"\r\n        value={feedback}\r\n        onChange={e => setFeedback(e.target.value)}\r\n        style={{ width: \"100%\", minHeight: 40, marginTop: 8 }}\r\n      />\r\n      <button onClick={handleFeedbackSubmit} style={{ marginTop: 4 }}>Submit Feedback</button>\r\n      <div>{feedbackMsg}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ---- Web Speech ----\r\nconst WebSpeechBox: React.FC<WebSpeechBoxProps> = ({ webTranscript, setWebTranscript }) => {\r\n  const { transcript, listening, startListening, stopListening, isBrowserSupported, clearTranscript } = useSpeechToText(\"en-US\");\r\n  React.useEffect(() => { setWebTranscript(transcript); }, [transcript, setWebTranscript]);\r\n  return (\r\n    <div style={{ border: \"2px solid #0074d9\", borderRadius: 8, padding: 16, width: 350, marginBottom: 18 }}>\r\n      <h3>Web Speech</h3>\r\n      <button onClick={startListening} disabled={listening || !isBrowserSupported}>Start</button>\r\n      <button onClick={stopListening} disabled={!listening}>Stop</button>\r\n      <button onClick={clearTranscript}>Clear</button>\r\n      <br />\r\n      <textarea value={webTranscript} readOnly style={{ width: \"100%\", minHeight: 60, marginTop: 8 }} placeholder=\"Web Speech Output\" />\r\n    </div>\r\n  );\r\n};\r\n\r\n// ---- Whisper ----\r\nconst WhisperBox: React.FC<WhisperBoxProps> = ({ whisperTranscript, setWhisperTranscript }) => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null);\r\n  const [output, setOutput] = useState(\"\");\r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n  const audioChunksRef = useRef<Blob[]>([]);\r\n\r\n  const handleStart = async () => {\r\n    setOutput(\"\");\r\n    setAudioBlob(null);\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const recorder = new MediaRecorder(stream);\r\n    mediaRecorderRef.current = recorder;\r\n    audioChunksRef.current = [];\r\n    recorder.ondataavailable = (e: BlobEvent) => audioChunksRef.current.push(e.data);\r\n    recorder.onstop = () => {\r\n      const blob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n      setAudioBlob(blob);\r\n      stream.getTracks().forEach(track => track.stop());\r\n    };\r\n    recorder.start();\r\n    setRecording(true);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleTranscribe = async () => {\r\n    if (!audioBlob) return alert(\"Record audio first!\");\r\n    setOutput(\"Transcribing...\");\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", audioBlob, \"audio.wav\");\r\n    formData.append(\"web_transcript\", \"\");\r\n    const res = await fetch(\"http://localhost:8080/api/transcribe?use_webspeech=0&use_whisper=1&use_llama=0\", { method: \"POST\", body: formData });\r\n    const data = await res.json();\r\n    setOutput(data.whisper_transcript || data.final_transcript || \"[no output]\");\r\n    setWhisperTranscript(data.whisper_transcript || data.final_transcript || \"\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setAudioBlob(null);\r\n    setOutput(\"\");\r\n    setWhisperTranscript(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid #2ecc40\", borderRadius: 8, padding: 16, width: 350, marginBottom: 18 }}>\r\n      <h3>Whisper</h3>\r\n      <button onClick={handleStart} disabled={recording}>Record</button>\r\n      <button onClick={handleStop} disabled={!recording}>Stop</button>\r\n      <button onClick={handleClear}>Clear</button>\r\n      <button onClick={handleTranscribe} disabled={!audioBlob}>Transcribe</button>\r\n      <br />\r\n      <textarea value={output} readOnly style={{ width: \"100%\", minHeight: 60, marginTop: 8 }} placeholder=\"Whisper Output\" />\r\n      {audioBlob && <audio controls src={URL.createObjectURL(audioBlob)} />}\r\n    </div>\r\n  );\r\n};\r\n\r\n// ---- Main Layout ----\r\nconst AudioTranscriptionDashboard: React.FC = () => {\r\n  const [webTranscript, setWebTranscript] = useState(\"\");\r\n  const [whisperTranscript, setWhisperTranscript] = useState(\"\");\r\n  const handleClearAll = () => { setWebTranscript(\"\"); setWhisperTranscript(\"\"); };\r\n return (\r\n  <div>\r\n    <h1>Medical E.V.A.N.S</h1>\r\n    <h2>Medical- Empathetic Voice-over Assistant for Nurturing Symptomatologist</h2>\r\n    <PdfUploadBox />  {/* <-- ADD THIS LINE */}\r\n    <h3>Transcription Components:</h3>\r\n    <div style={{ display: \"flex\", gap: 16, flexWrap: \"wrap\" }}>\r\n      <WebSpeechBox webTranscript={webTranscript} setWebTranscript={setWebTranscript} />\r\n      <WhisperBox whisperTranscript={whisperTranscript} setWhisperTranscript={setWhisperTranscript} />\r\n      <LlamaBox webTranscript={webTranscript} whisperTranscript={whisperTranscript} onClearAll={handleClearAll} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default AudioTranscriptionDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}