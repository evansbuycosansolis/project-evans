{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useSpeechToText.ts\nimport { useState, useRef, useCallback } from \"react\";\nexport function useSpeechToText(lang = \"en-US\") {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [listening, setListening] = useState(false);\n  const [isBrowserSupported, setIsBrowserSupported] = useState(false);\n  const recognitionRef = useRef(null);\n  const forceStop = useRef(false);\n\n  // Start listening\n  const startListening = useCallback(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      setIsBrowserSupported(false);\n      return;\n    }\n    setIsBrowserSupported(true);\n    forceStop.current = false;\n    if (!recognitionRef.current) {\n      const rec = new SpeechRecognition();\n      rec.lang = lang;\n      rec.interimResults = false;\n      rec.continuous = true; // important!\n      rec.onresult = event => {\n        let final = \"\";\n        for (let i = 0; i < event.results.length; ++i) {\n          final += event.results[i][0].transcript;\n        }\n        setTranscript(final.trim());\n      };\n      // If auto-stop (end of speech), restart unless user stopped\n      rec.onend = () => {\n        setListening(false);\n        if (!forceStop.current) {\n          rec.start();\n          setListening(true);\n        }\n      };\n      recognitionRef.current = rec;\n    }\n    recognitionRef.current.start();\n    setListening(true);\n  }, [lang]);\n\n  // Stop listening\n  const stopListening = useCallback(() => {\n    forceStop.current = true;\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      setListening(false);\n    }\n  }, []);\n\n  // Clear transcript\n  const clearTranscript = useCallback(() => setTranscript(\"\"), []);\n  return {\n    transcript,\n    listening,\n    startListening,\n    stopListening,\n    clearTranscript,\n    isBrowserSupported: true\n  };\n}\n_s(useSpeechToText, \"2LmXwIf2JGnoTMyGJb7o0kEpi9Y=\");","map":{"version":3,"names":["useState","useRef","useCallback","useSpeechToText","lang","_s","transcript","setTranscript","listening","setListening","isBrowserSupported","setIsBrowserSupported","recognitionRef","forceStop","startListening","SpeechRecognition","window","webkitSpeechRecognition","current","rec","interimResults","continuous","onresult","event","final","i","results","length","trim","onend","start","stopListening","stop","clearTranscript"],"sources":["C:/Users/ASUS/Documents/0- UT PGP AIML/project-evans/frontend/src/hooks/useSpeechToText.tsx"],"sourcesContent":["// src/hooks/useSpeechToText.ts\r\nimport { useState, useRef, useCallback } from \"react\";\r\n\r\nexport function useSpeechToText(lang = \"en-US\") {\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [listening, setListening] = useState(false);\r\n  const [isBrowserSupported, setIsBrowserSupported] = useState(false);\r\n  const recognitionRef = useRef<any>(null);\r\n  const forceStop = useRef(false);\r\n\r\n  // Start listening\r\n  const startListening = useCallback(() => {\r\n    const SpeechRecognition =\r\n      (window as any).SpeechRecognition || (window as any).webkitSpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n      setIsBrowserSupported(false);\r\n      return;\r\n    }\r\n    setIsBrowserSupported(true);\r\n    forceStop.current = false;\r\n    if (!recognitionRef.current) {\r\n      const rec = new SpeechRecognition();\r\n      rec.lang = lang;\r\n      rec.interimResults = false;\r\n      rec.continuous = true; // important!\r\n      rec.onresult = (event: any) => {\r\n        let final = \"\";\r\n        for (let i = 0; i < event.results.length; ++i) {\r\n          final += event.results[i][0].transcript;\r\n        }\r\n        setTranscript(final.trim());\r\n      };\r\n      // If auto-stop (end of speech), restart unless user stopped\r\n      rec.onend = () => {\r\n        setListening(false);\r\n        if (!forceStop.current) {\r\n          rec.start();\r\n          setListening(true);\r\n        }\r\n      };\r\n      recognitionRef.current = rec;\r\n    }\r\n    recognitionRef.current.start();\r\n    setListening(true);\r\n  }, [lang]);\r\n\r\n  // Stop listening\r\n  const stopListening = useCallback(() => {\r\n    forceStop.current = true;\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n      setListening(false);\r\n    }\r\n  }, []);\r\n\r\n  // Clear transcript\r\n  const clearTranscript = useCallback(() => setTranscript(\"\"), []);\r\n\r\n  return { transcript, listening, startListening, stopListening, clearTranscript, isBrowserSupported: true };\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAErD,OAAO,SAASC,eAAeA,CAACC,IAAI,GAAG,OAAO,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAMY,cAAc,GAAGX,MAAM,CAAM,IAAI,CAAC;EACxC,MAAMY,SAAS,GAAGZ,MAAM,CAAC,KAAK,CAAC;;EAE/B;EACA,MAAMa,cAAc,GAAGZ,WAAW,CAAC,MAAM;IACvC,MAAMa,iBAAiB,GACpBC,MAAM,CAASD,iBAAiB,IAAKC,MAAM,CAASC,uBAAuB;IAC9E,IAAI,CAACF,iBAAiB,EAAE;MACtBJ,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;IACAA,qBAAqB,CAAC,IAAI,CAAC;IAC3BE,SAAS,CAACK,OAAO,GAAG,KAAK;IACzB,IAAI,CAACN,cAAc,CAACM,OAAO,EAAE;MAC3B,MAAMC,GAAG,GAAG,IAAIJ,iBAAiB,CAAC,CAAC;MACnCI,GAAG,CAACf,IAAI,GAAGA,IAAI;MACfe,GAAG,CAACC,cAAc,GAAG,KAAK;MAC1BD,GAAG,CAACE,UAAU,GAAG,IAAI,CAAC,CAAC;MACvBF,GAAG,CAACG,QAAQ,GAAIC,KAAU,IAAK;QAC7B,IAAIC,KAAK,GAAG,EAAE;QACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,OAAO,CAACC,MAAM,EAAE,EAAEF,CAAC,EAAE;UAC7CD,KAAK,IAAID,KAAK,CAACG,OAAO,CAACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnB,UAAU;QACzC;QACAC,aAAa,CAACiB,KAAK,CAACI,IAAI,CAAC,CAAC,CAAC;MAC7B,CAAC;MACD;MACAT,GAAG,CAACU,KAAK,GAAG,MAAM;QAChBpB,YAAY,CAAC,KAAK,CAAC;QACnB,IAAI,CAACI,SAAS,CAACK,OAAO,EAAE;UACtBC,GAAG,CAACW,KAAK,CAAC,CAAC;UACXrB,YAAY,CAAC,IAAI,CAAC;QACpB;MACF,CAAC;MACDG,cAAc,CAACM,OAAO,GAAGC,GAAG;IAC9B;IACAP,cAAc,CAACM,OAAO,CAACY,KAAK,CAAC,CAAC;IAC9BrB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;;EAEV;EACA,MAAM2B,aAAa,GAAG7B,WAAW,CAAC,MAAM;IACtCW,SAAS,CAACK,OAAO,GAAG,IAAI;IACxB,IAAIN,cAAc,CAACM,OAAO,EAAE;MAC1BN,cAAc,CAACM,OAAO,CAACc,IAAI,CAAC,CAAC;MAC7BvB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMwB,eAAe,GAAG/B,WAAW,CAAC,MAAMK,aAAa,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAEhE,OAAO;IAAED,UAAU;IAAEE,SAAS;IAAEM,cAAc;IAAEiB,aAAa;IAAEE,eAAe;IAAEvB,kBAAkB,EAAE;EAAK,CAAC;AAC5G;AAACL,EAAA,CAxDeF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}