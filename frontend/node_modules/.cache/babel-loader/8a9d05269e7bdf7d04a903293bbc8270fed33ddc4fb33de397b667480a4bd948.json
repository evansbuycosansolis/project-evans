{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\0- UT PGP AIML\\\\project-evans\\\\frontend\\\\src\\\\components\\\\AudioRecorder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoTranscribe = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState(\"\");\n  const recognitionRef = useRef(null);\n\n  // Compatibility (Chrome, Edge, Safari)\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  const startRecording = () => {\n    if (!SpeechRecognition) {\n      alert(\"Speech Recognition API not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = \"en-US\";\n    recognition.onresult = event => {\n      let interim = \"\";\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        const result = event.results[i];\n        if (result.isFinal) {\n          setTranscript(prev => prev + result[0].transcript + \" \");\n        } else {\n          interim += result[0].transcript;\n        }\n      }\n      // Show interim transcript\n      if (interim) setTranscript(prev => prev.split(\" [INTERIM]\")[0] + interim + \" [INTERIM]\");\n    };\n    recognition.onerror = e => {\n      console.error(\"Speech recognition error:\", e);\n      setIsRecording(false);\n      recognition.stop();\n    };\n    recognition.onend = () => {\n      setIsRecording(false);\n    };\n    recognitionRef.current = recognition;\n    recognition.start();\n    setIsRecording(true);\n  };\n  const stopRecording = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      recognitionRef.current = null;\n    }\n    setIsRecording(false);\n    // Remove \"[INTERIM]\" marker\n    setTranscript(prev => prev.replace(/\\s?\\[INTERIM\\]$/, \"\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isRecording ? stopRecording : startRecording,\n      style: {\n        background: isRecording ? \"#e53935\" : \"#388e3c\",\n        color: \"#fff\",\n        border: \"none\",\n        padding: \"8px 20px\",\n        borderRadius: 6,\n        marginBottom: 16,\n        fontWeight: \"bold\"\n      },\n      children: isRecording ? \"Stop Recording\" : \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: transcript.replace(/\\s?\\[INTERIM\\]$/, \"\"),\n        rows: 8,\n        style: {\n          width: \"98%\",\n          fontSize: \"1.4em\",\n          border: \"2px solid #e53935\",\n          borderRadius: 8,\n          padding: 12,\n          marginTop: 12,\n          color: \"#333\",\n          background: \"#fffdfc\"\n        },\n        placeholder: \"Auto transcribe here...\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoTranscribe, \"CFtjzbFpgbo7ONcrf1WurLY5jME=\");\n_c = AutoTranscribe;\nexport default AutoTranscribe;\nvar _c;\n$RefreshReg$(_c, \"AutoTranscribe\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","AutoTranscribe","_s","isRecording","setIsRecording","transcript","setTranscript","recognitionRef","SpeechRecognition","window","webkitSpeechRecognition","startRecording","alert","recognition","continuous","interimResults","lang","onresult","event","interim","i","resultIndex","results","length","result","isFinal","prev","split","onerror","e","console","error","stop","onend","current","start","stopRecording","replace","style","marginTop","children","onClick","background","color","border","padding","borderRadius","marginBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","value","rows","width","fontSize","placeholder","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/0- UT PGP AIML/project-evans/frontend/src/components/AudioRecorder.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst AutoTranscribe: React.FC = () => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const recognitionRef = useRef<SpeechRecognition | null>(null);\r\n\r\n  // Compatibility (Chrome, Edge, Safari)\r\n  const SpeechRecognition =\r\n    (window as any).SpeechRecognition ||\r\n    (window as any).webkitSpeechRecognition;\r\n\r\n  const startRecording = () => {\r\n    if (!SpeechRecognition) {\r\n      alert(\"Speech Recognition API not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = \"en-US\";\r\n\r\n    recognition.onresult = (event: SpeechRecognitionEvent) => {\r\n      let interim = \"\";\r\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n        const result = event.results[i];\r\n        if (result.isFinal) {\r\n          setTranscript((prev) => prev + result[0].transcript + \" \");\r\n        } else {\r\n          interim += result[0].transcript;\r\n        }\r\n      }\r\n      // Show interim transcript\r\n      if (interim) setTranscript((prev) => prev.split(\" [INTERIM]\")[0] + interim + \" [INTERIM]\");\r\n    };\r\n\r\n    recognition.onerror = (e: any) => {\r\n      console.error(\"Speech recognition error:\", e);\r\n      setIsRecording(false);\r\n      recognition.stop();\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setIsRecording(false);\r\n    };\r\n\r\n    recognitionRef.current = recognition;\r\n    recognition.start();\r\n    setIsRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n      recognitionRef.current = null;\r\n    }\r\n    setIsRecording(false);\r\n    // Remove \"[INTERIM]\" marker\r\n    setTranscript((prev) => prev.replace(/\\s?\\[INTERIM\\]$/, \"\"));\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: 24 }}>\r\n      <button\r\n        onClick={isRecording ? stopRecording : startRecording}\r\n        style={{\r\n          background: isRecording ? \"#e53935\" : \"#388e3c\",\r\n          color: \"#fff\",\r\n          border: \"none\",\r\n          padding: \"8px 20px\",\r\n          borderRadius: 6,\r\n          marginBottom: 16,\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        {isRecording ? \"Stop Recording\" : \"Start Recording\"}\r\n      </button>\r\n      <div>\r\n        <textarea\r\n          value={transcript.replace(/\\s?\\[INTERIM\\]$/, \"\")}\r\n          rows={8}\r\n          style={{\r\n            width: \"98%\",\r\n            fontSize: \"1.4em\",\r\n            border: \"2px solid #e53935\",\r\n            borderRadius: 8,\r\n            padding: 12,\r\n            marginTop: 12,\r\n            color: \"#333\",\r\n            background: \"#fffdfc\",\r\n          }}\r\n          placeholder=\"Auto transcribe here...\"\r\n          readOnly\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoTranscribe;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}