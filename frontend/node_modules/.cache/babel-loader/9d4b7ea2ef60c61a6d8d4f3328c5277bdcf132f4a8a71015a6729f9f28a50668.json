{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\0- UT PGP AIML\\\\project-evans\\\\frontend\\\\src\\\\components\\\\AudioTranscriptionDashboard.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useSpeechToText } from \"../hooks/useSpeechToText\";\n\n// ---- Interfaces ----\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ---- Llama ----\nconst LlamaBox = ({\n  webTranscript,\n  whisperTranscript,\n  onClearAll\n}) => {\n  _s();\n  const [llamaOutput, setLlamaOutput] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const [feedbackMsg, setFeedbackMsg] = useState(\"\");\n  const handleLlama = async () => {\n    if (!webTranscript && !whisperTranscript) {\n      alert(\"No transcript available!\");\n      return;\n    }\n    setLlamaOutput(\"Processing...\");\n    const formData = new FormData();\n    formData.append(\"audio\", new Blob(), \"blank.wav\");\n    formData.append(\"web_transcript\", webTranscript);\n    formData.append(\"whisper_transcript\", whisperTranscript);\n    const res = await fetch(\"http://localhost:8080/api/llama_use\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setLlamaOutput(data.final_transcript || \"[no output]\");\n  };\n  const handleClear = () => {\n    setLlamaOutput(\"\");\n    onClearAll();\n  };\n  const handleFeedbackSubmit = async () => {\n    const res = await fetch(\"http://localhost:8080/api/transcript_feedback\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        whisper_text: whisperTranscript,\n        llama_output: llamaOutput,\n        feedback\n      })\n    });\n    const data = await res.json();\n    setFeedbackMsg(data.message || \"Feedback submitted!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid #b10dc9\",\n      borderRadius: 8,\n      padding: 16,\n      width: 350,\n      marginBottom: 18\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Llama\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLlama,\n      children: \"Llama Transcribe (Enhance Whisper Transcription)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      style: {\n        marginLeft: 8\n      },\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: llamaOutput,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Llama Output (merged/refined)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Your feedback/correction here...\",\n      value: feedback,\n      onChange: e => setFeedback(e.target.value),\n      style: {\n        width: \"100%\",\n        minHeight: 40,\n        marginTop: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFeedbackSubmit,\n      style: {\n        marginTop: 4\n      },\n      children: \"Submit Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: feedbackMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n// ---- Web Speech ----\n_s(LlamaBox, \"PxI646zE/4UjQrmI17vYlSW/H1E=\");\n_c = LlamaBox;\nconst WebSpeechBox = ({\n  webTranscript,\n  setWebTranscript\n}) => {\n  _s2();\n  const {\n    transcript,\n    listening,\n    startListening,\n    stopListening,\n    isBrowserSupported,\n    clearTranscript\n  } = useSpeechToText(\"en-US\");\n  React.useEffect(() => {\n    setWebTranscript(transcript);\n  }, [transcript, setWebTranscript]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid #0074d9\",\n      borderRadius: 8,\n      padding: 16,\n      width: 350,\n      marginBottom: 18\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Web Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startListening,\n      disabled: listening || !isBrowserSupported,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopListening,\n      disabled: !listening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearTranscript,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: webTranscript,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Web Speech Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n// ---- Whisper ----\n_s2(WebSpeechBox, \"oo5SYBgLEyCOzbtPlDuuMIQYS0M=\", false, function () {\n  return [useSpeechToText];\n});\n_c2 = WebSpeechBox;\nconst WhisperBox = ({\n  whisperTranscript,\n  setWhisperTranscript\n}) => {\n  _s3();\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [output, setOutput] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const handleStart = async () => {\n    setOutput(\"\");\n    setAudioBlob(null);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const recorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = recorder;\n    audioChunksRef.current = [];\n    recorder.ondataavailable = e => audioChunksRef.current.push(e.data);\n    recorder.onstop = () => {\n      const blob = new Blob(audioChunksRef.current, {\n        type: \"audio/wav\"\n      });\n      setAudioBlob(blob);\n      stream.getTracks().forEach(track => track.stop());\n    };\n    recorder.start();\n    setRecording(true);\n  };\n  const handleStop = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  const handleTranscribe = async () => {\n    if (!audioBlob) return alert(\"Record audio first!\");\n    setOutput(\"Transcribing...\");\n    const formData = new FormData();\n    formData.append(\"audio\", audioBlob, \"audio.wav\");\n    formData.append(\"web_transcript\", \"\");\n    const res = await fetch(\"http://localhost:8080/api/transcribe?use_webspeech=0&use_whisper=1&use_llama=0\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setOutput(data.whisper_transcript || data.final_transcript || \"[no output]\");\n    setWhisperTranscript(data.whisper_transcript || data.final_transcript || \"\");\n  };\n  const handleClear = () => {\n    setAudioBlob(null);\n    setOutput(\"\");\n    setWhisperTranscript(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid #2ecc40\",\n      borderRadius: 8,\n      padding: 16,\n      width: 350,\n      marginBottom: 18\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Whisper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      disabled: recording,\n      children: \"Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      disabled: !recording,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranscribe,\n      disabled: !audioBlob,\n      children: \"Transcribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: output,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Whisper Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      src: URL.createObjectURL(audioBlob)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n// ---- Main Layout ----\n_s3(WhisperBox, \"3humosjixi9bIaM3r+4k5Sped9E=\");\n_c3 = WhisperBox;\nconst AudioTranscriptionDashboard = () => {\n  _s4();\n  const [webTranscript, setWebTranscript] = useState(\"\");\n  const [whisperTranscript, setWhisperTranscript] = useState(\"\");\n  const handleClearAll = () => {\n    setWebTranscript(\"\");\n    setWhisperTranscript(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medical E.V.A.N.S\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Medical- Empathetic Voice-over Assistant for Nurturing Symptomatologist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transcription Components:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 16,\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(WebSpeechBox, {\n        webTranscript: webTranscript,\n        setWebTranscript: setWebTranscript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WhisperBox, {\n        whisperTranscript: whisperTranscript,\n        setWhisperTranscript: setWhisperTranscript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LlamaBox, {\n        webTranscript: webTranscript,\n        whisperTranscript: whisperTranscript,\n        onClearAll: handleClearAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s4(AudioTranscriptionDashboard, \"CqjZgB6C6S4rFrPD5j5cF/NapAw=\");\n_c4 = AudioTranscriptionDashboard;\nexport default AudioTranscriptionDashboard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LlamaBox\");\n$RefreshReg$(_c2, \"WebSpeechBox\");\n$RefreshReg$(_c3, \"WhisperBox\");\n$RefreshReg$(_c4, \"AudioTranscriptionDashboard\");","map":{"version":3,"names":["React","useState","useRef","useSpeechToText","jsxDEV","_jsxDEV","LlamaBox","webTranscript","whisperTranscript","onClearAll","_s","llamaOutput","setLlamaOutput","feedback","setFeedback","feedbackMsg","setFeedbackMsg","handleLlama","alert","formData","FormData","append","Blob","res","fetch","method","body","data","json","final_transcript","handleClear","handleFeedbackSubmit","headers","JSON","stringify","whisper_text","llama_output","message","style","border","borderRadius","padding","width","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginLeft","value","readOnly","minHeight","marginTop","placeholder","onChange","e","target","_c","WebSpeechBox","setWebTranscript","_s2","transcript","listening","startListening","stopListening","isBrowserSupported","clearTranscript","useEffect","disabled","_c2","WhisperBox","setWhisperTranscript","_s3","recording","setRecording","audioBlob","setAudioBlob","output","setOutput","mediaRecorderRef","audioChunksRef","handleStart","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","current","ondataavailable","push","onstop","blob","type","getTracks","forEach","track","stop","start","handleStop","handleTranscribe","whisper_transcript","controls","src","URL","createObjectURL","_c3","AudioTranscriptionDashboard","_s4","handleClearAll","display","gap","flexWrap","_c4","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/0- UT PGP AIML/project-evans/frontend/src/components/AudioTranscriptionDashboard.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useSpeechToText } from \"../hooks/useSpeechToText\";\r\n\r\n// ---- Interfaces ----\r\ninterface WebSpeechBoxProps {\r\n  webTranscript: string;\r\n  setWebTranscript: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\ninterface WhisperBoxProps {\r\n  whisperTranscript: string;\r\n  setWhisperTranscript: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\ninterface LlamaBoxProps {\r\n  webTranscript: string;\r\n  whisperTranscript: string;\r\n  onClearAll: () => void;\r\n}\r\n\r\n// ---- Llama ----\r\nconst LlamaBox: React.FC<LlamaBoxProps> = ({ webTranscript, whisperTranscript, onClearAll }) => {\r\n  const [llamaOutput, setLlamaOutput] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [feedbackMsg, setFeedbackMsg] = useState(\"\");\r\n\r\n  const handleLlama = async () => {\r\n    if (!webTranscript && !whisperTranscript) {\r\n      alert(\"No transcript available!\");\r\n      return;\r\n    }\r\n    setLlamaOutput(\"Processing...\");\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", new Blob(), \"blank.wav\");\r\n    formData.append(\"web_transcript\", webTranscript);\r\n    formData.append(\"whisper_transcript\", whisperTranscript);\r\n    const res = await fetch(\"http://localhost:8080/api/llama_use\", { method: \"POST\", body: formData });\r\n    const data = await res.json();\r\n    setLlamaOutput(data.final_transcript || \"[no output]\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setLlamaOutput(\"\");\r\n    onClearAll();\r\n  };\r\n\r\n  const handleFeedbackSubmit = async () => {\r\n    const res = await fetch(\"http://localhost:8080/api/transcript_feedback\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        whisper_text: whisperTranscript,\r\n        llama_output: llamaOutput,\r\n        feedback,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    setFeedbackMsg(data.message || \"Feedback submitted!\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid #b10dc9\", borderRadius: 8, padding: 16, width: 350, marginBottom: 18 }}>\r\n      <h3>Llama</h3>\r\n      <button onClick={handleLlama}>Llama Transcribe (Enhance Whisper Transcription)</button>\r\n      <button onClick={handleClear} style={{ marginLeft: 8 }}>Clear</button>\r\n      <br />\r\n      <textarea value={llamaOutput} readOnly style={{ width: \"100%\", minHeight: 60, marginTop: 8 }} placeholder=\"Llama Output (merged/refined)\" />\r\n      <textarea\r\n        placeholder=\"Your feedback/correction here...\"\r\n        value={feedback}\r\n        onChange={e => setFeedback(e.target.value)}\r\n        style={{ width: \"100%\", minHeight: 40, marginTop: 8 }}\r\n      />\r\n      <button onClick={handleFeedbackSubmit} style={{ marginTop: 4 }}>Submit Feedback</button>\r\n      <div>{feedbackMsg}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ---- Web Speech ----\r\nconst WebSpeechBox: React.FC<WebSpeechBoxProps> = ({ webTranscript, setWebTranscript }) => {\r\n  const { transcript, listening, startListening, stopListening, isBrowserSupported, clearTranscript } = useSpeechToText(\"en-US\");\r\n  React.useEffect(() => { setWebTranscript(transcript); }, [transcript, setWebTranscript]);\r\n  return (\r\n    <div style={{ border: \"2px solid #0074d9\", borderRadius: 8, padding: 16, width: 350, marginBottom: 18 }}>\r\n      <h3>Web Speech</h3>\r\n      <button onClick={startListening} disabled={listening || !isBrowserSupported}>Start</button>\r\n      <button onClick={stopListening} disabled={!listening}>Stop</button>\r\n      <button onClick={clearTranscript}>Clear</button>\r\n      <br />\r\n      <textarea value={webTranscript} readOnly style={{ width: \"100%\", minHeight: 60, marginTop: 8 }} placeholder=\"Web Speech Output\" />\r\n    </div>\r\n  );\r\n};\r\n\r\n// ---- Whisper ----\r\nconst WhisperBox: React.FC<WhisperBoxProps> = ({ whisperTranscript, setWhisperTranscript }) => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null);\r\n  const [output, setOutput] = useState(\"\");\r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n  const audioChunksRef = useRef<Blob[]>([]);\r\n\r\n  const handleStart = async () => {\r\n    setOutput(\"\");\r\n    setAudioBlob(null);\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const recorder = new MediaRecorder(stream);\r\n    mediaRecorderRef.current = recorder;\r\n    audioChunksRef.current = [];\r\n    recorder.ondataavailable = (e: BlobEvent) => audioChunksRef.current.push(e.data);\r\n    recorder.onstop = () => {\r\n      const blob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n      setAudioBlob(blob);\r\n      stream.getTracks().forEach(track => track.stop());\r\n    };\r\n    recorder.start();\r\n    setRecording(true);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleTranscribe = async () => {\r\n    if (!audioBlob) return alert(\"Record audio first!\");\r\n    setOutput(\"Transcribing...\");\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", audioBlob, \"audio.wav\");\r\n    formData.append(\"web_transcript\", \"\");\r\n    const res = await fetch(\"http://localhost:8080/api/transcribe?use_webspeech=0&use_whisper=1&use_llama=0\", { method: \"POST\", body: formData });\r\n    const data = await res.json();\r\n    setOutput(data.whisper_transcript || data.final_transcript || \"[no output]\");\r\n    setWhisperTranscript(data.whisper_transcript || data.final_transcript || \"\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setAudioBlob(null);\r\n    setOutput(\"\");\r\n    setWhisperTranscript(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid #2ecc40\", borderRadius: 8, padding: 16, width: 350, marginBottom: 18 }}>\r\n      <h3>Whisper</h3>\r\n      <button onClick={handleStart} disabled={recording}>Record</button>\r\n      <button onClick={handleStop} disabled={!recording}>Stop</button>\r\n      <button onClick={handleClear}>Clear</button>\r\n      <button onClick={handleTranscribe} disabled={!audioBlob}>Transcribe</button>\r\n      <br />\r\n      <textarea value={output} readOnly style={{ width: \"100%\", minHeight: 60, marginTop: 8 }} placeholder=\"Whisper Output\" />\r\n      {audioBlob && <audio controls src={URL.createObjectURL(audioBlob)} />}\r\n    </div>\r\n  );\r\n};\r\n\r\n// ---- Main Layout ----\r\nconst AudioTranscriptionDashboard: React.FC = () => {\r\n  const [webTranscript, setWebTranscript] = useState(\"\");\r\n  const [whisperTranscript, setWhisperTranscript] = useState(\"\");\r\n  const handleClearAll = () => { setWebTranscript(\"\"); setWhisperTranscript(\"\"); };\r\n  return (\r\n    <div>\r\n      <h1>Medical E.V.A.N.S</h1>\r\n      <h2>Medical- Empathetic Voice-over Assistant for Nurturing Symptomatologist</h2>\r\n      <h3>Transcription Components:</h3>\r\n      <div style={{ display: \"flex\", gap: 16, flexWrap: \"wrap\" }}>\r\n        <WebSpeechBox webTranscript={webTranscript} setWebTranscript={setWebTranscript} />\r\n        <WhisperBox whisperTranscript={whisperTranscript} setWhisperTranscript={setWhisperTranscript} />\r\n        <LlamaBox webTranscript={webTranscript} whisperTranscript={whisperTranscript} onClearAll={handleClearAll} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioTranscriptionDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}