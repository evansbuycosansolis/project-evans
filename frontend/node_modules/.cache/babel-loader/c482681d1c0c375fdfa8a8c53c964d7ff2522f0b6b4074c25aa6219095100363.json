{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\0- UT PGP AIML\\\\project-evans\\\\frontend\\\\src\\\\components\\\\AudioHybridRecorder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioHybridRecorder = () => {\n  _s();\n  // Fix: give types to your refs!\n  const [recording, setRecording] = useState(false);\n  const [, setAudioBlob] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // Start recording\n  const handleStartRecording = async () => {\n    setAudioBlob(null);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const mediaRecorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = mediaRecorder;\n    audioChunksRef.current = [];\n    mediaRecorder.ondataavailable = event => {\n      audioChunksRef.current.push(event.data);\n    };\n    mediaRecorder.onstop = () => {\n      const audioBlob = new Blob(audioChunksRef.current, {\n        type: \"audio/wav\"\n      });\n      setAudioBlob(audioBlob);\n      stream.getTracks().forEach(track => track.stop());\n    };\n    mediaRecorder.start();\n    setRecording(true);\n  };\n\n  // Stop recording\n  const handleStopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n\n  // ...your handleTranscribe etc.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: recording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: !recording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioHybridRecorder, \"K/PRItBKvzrRqczWenoN4xQ8SFA=\");\n_c = AudioHybridRecorder;\nexport default AudioHybridRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioHybridRecorder\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","AudioHybridRecorder","_s","recording","setRecording","setAudioBlob","mediaRecorderRef","audioChunksRef","handleStartRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","current","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","getTracks","forEach","track","stop","start","handleStopRecording","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/0- UT PGP AIML/project-evans/frontend/src/components/AudioHybridRecorder.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst AudioHybridRecorder = () => {\r\n  // Fix: give types to your refs!\r\nconst [recording, setRecording] = useState(false);\r\nconst [, setAudioBlob] = useState<Blob | null>(null);\r\nconst mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\nconst audioChunksRef = useRef<Blob[]>([]);\r\n\r\n  // Start recording\r\n    const handleStartRecording = async () => {\r\n    setAudioBlob(null);\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const mediaRecorder = new MediaRecorder(stream);\r\n    mediaRecorderRef.current = mediaRecorder;\r\n    audioChunksRef.current = [];\r\n\r\n    mediaRecorder.ondataavailable = (event: BlobEvent) => {\r\n    audioChunksRef.current.push(event.data);\r\n    };\r\n\r\n    mediaRecorder.onstop = () => {\r\n    const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n    setAudioBlob(audioBlob);\r\n    stream.getTracks().forEach((track) => track.stop());\r\n    };\r\n\r\n    mediaRecorder.start();\r\n    setRecording(true);\r\n};\r\n\r\n  // Stop recording\r\n    const handleStopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n    mediaRecorderRef.current.stop();\r\n    setRecording(false);\r\n    }\r\n};\r\n\r\n  // ...your handleTranscribe etc.\r\n\r\nreturn (\r\n    <div>\r\n      {/* ...your UI ... */}\r\n    <button onClick={handleStartRecording} disabled={recording}>\r\n        Start Recording\r\n    </button>\r\n    <button onClick={handleStopRecording} disabled={!recording}>\r\n        Stop Recording\r\n    </button>\r\n      {/* ... */}\r\n    </div>\r\n );\r\n};\r\n\r\nexport default AudioHybridRecorder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,GAAGQ,YAAY,CAAC,GAAGR,QAAQ,CAAc,IAAI,CAAC;EACpD,MAAMS,gBAAgB,GAAGR,MAAM,CAAuB,IAAI,CAAC;EAC3D,MAAMS,cAAc,GAAGT,MAAM,CAAS,EAAE,CAAC;;EAEvC;EACE,MAAMU,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACzCH,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMI,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzE,MAAMC,aAAa,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;IAC/CH,gBAAgB,CAACU,OAAO,GAAGF,aAAa;IACxCP,cAAc,CAACS,OAAO,GAAG,EAAE;IAE3BF,aAAa,CAACG,eAAe,GAAIC,KAAgB,IAAK;MACtDX,cAAc,CAACS,OAAO,CAACG,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;IACvC,CAAC;IAEDN,aAAa,CAACO,MAAM,GAAG,MAAM;MAC7B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAChB,cAAc,CAACS,OAAO,EAAE;QAAEQ,IAAI,EAAE;MAAY,CAAC,CAAC;MACzEnB,YAAY,CAACiB,SAAS,CAAC;MACvBb,MAAM,CAACgB,SAAS,CAAC,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IACnD,CAAC;IAEDd,aAAa,CAACe,KAAK,CAAC,CAAC;IACrBzB,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;;EAEC;EACE,MAAM0B,mBAAmB,GAAGA,CAAA,KAAM;IAClC,IAAIxB,gBAAgB,CAACU,OAAO,EAAE;MAC9BV,gBAAgB,CAACU,OAAO,CAACY,IAAI,CAAC,CAAC;MAC/BxB,YAAY,CAAC,KAAK,CAAC;IACnB;EACJ,CAAC;;EAEC;;EAEF,oBACIJ,OAAA;IAAA+B,QAAA,gBAEA/B,OAAA;MAAQgC,OAAO,EAAExB,oBAAqB;MAACyB,QAAQ,EAAE9B,SAAU;MAAA4B,QAAA,EAAC;IAE5D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrC,OAAA;MAAQgC,OAAO,EAAEF,mBAAoB;MAACG,QAAQ,EAAE,CAAC9B,SAAU;MAAA4B,QAAA,EAAC;IAE5D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV,CAAC;AAACnC,EAAA,CAnDID,mBAAmB;AAAAqC,EAAA,GAAnBrC,mBAAmB;AAqDzB,eAAeA,mBAAmB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}