{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\0- UT PGP AIML\\\\project-evans\\\\frontend\\\\src\\\\components\\\\AudioTranscriptionDashboard.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useSpeechToText } from \"../hooks/useSpeechToText\";\n\n// === Web Speech Box ===\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSpeechBox = ({\n  webTranscript,\n  setWebTranscript\n}) => {\n  _s();\n  const {\n    transcript,\n    listening,\n    startListening,\n    stopListening,\n    isBrowserSupported,\n    clearTranscript\n  } = useSpeechToText(\"en-US\");\n\n  // Sync transcript to parent when it changes\n  React.useEffect(() => {\n    setWebTranscript(transcript);\n  }, [transcript, setWebTranscript]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid #0074d9\",\n      borderRadius: 8,\n      padding: 16,\n      width: 350,\n      marginBottom: 18\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Web Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startListening,\n      disabled: listening || !isBrowserSupported,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopListening,\n      disabled: !listening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearTranscript,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: webTranscript,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Web Speech Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n// === Whisper Box ===\n_s(WebSpeechBox, \"oo5SYBgLEyCOzbtPlDuuMIQYS0M=\", false, function () {\n  return [useSpeechToText];\n});\n_c = WebSpeechBox;\nconst WhisperBox = ({\n  whisperTranscript,\n  setWhisperTranscript\n}) => {\n  _s2();\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [output, setOutput] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const handleStart = async () => {\n    setOutput(\"\");\n    setAudioBlob(null);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const recorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = recorder;\n    audioChunksRef.current = [];\n    recorder.ondataavailable = e => audioChunksRef.current.push(e.data);\n    recorder.onstop = () => {\n      const blob = new Blob(audioChunksRef.current, {\n        type: \"audio/wav\"\n      });\n      setAudioBlob(blob);\n      stream.getTracks().forEach(track => track.stop());\n    };\n    recorder.start();\n    setRecording(true);\n  };\n  const handleStop = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  const handleTranscribe = async () => {\n    if (!audioBlob) return alert(\"Record audio first!\");\n    setOutput(\"Transcribing...\");\n    const formData = new FormData();\n    formData.append(\"audio\", audioBlob, \"audio.wav\");\n    formData.append(\"web_transcript\", \"\"); // not used for Whisper\n    const res = await fetch(\"http://localhost:8080/api/transcribe?use_webspeech=0&use_whisper=1&use_llama=0\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setOutput(data.whisper_transcript || data.final_transcript || \"[no output]\");\n    setWhisperTranscript(data.whisper_transcript || data.final_transcript || \"\");\n  };\n  const handleClear = () => {\n    setAudioBlob(null);\n    setOutput(\"\");\n    setWhisperTranscript(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid #2ecc40\",\n      borderRadius: 8,\n      padding: 16,\n      width: 350,\n      marginBottom: 18\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Whisper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      disabled: recording,\n      children: \"Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      disabled: !recording,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranscribe,\n      disabled: !audioBlob,\n      children: \"Transcribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: output,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Whisper Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      src: URL.createObjectURL(audioBlob)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n// === Llama Box (uses both transcripts directly, no input fields!) ===\n_s2(WhisperBox, \"3humosjixi9bIaM3r+4k5Sped9E=\");\n_c2 = WhisperBox;\nconst LlamaBox = ({\n  webTranscript,\n  whisperTranscript,\n  onClearAll\n}) => {\n  _s3();\n  const [llamaOutput, setLlamaOutput] = useState(\"\");\n  const handleLlama = async () => {\n    if (!webTranscript && !whisperTranscript) {\n      alert(\"No transcript available!\");\n      return;\n    }\n    setLlamaOutput(\"Processing...\");\n    // Dummy audio for API requirement (not actually used here)\n    const formData = new FormData();\n    formData.append(\"audio\", new Blob(), \"blank.wav\");\n    formData.append(\"web_transcript\", webTranscript);\n    formData.append(\"whisper_transcript\", whisperTranscript);\n\n    // Use your backend to merge/fuse\n    const res = await fetch(\"http://localhost:8080/api/llama_fuse\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setLlamaOutput(data.final_transcript || \"[no output]\");\n  };\n  const handleClear = () => {\n    setLlamaOutput(\"\");\n    onClearAll();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid #b10dc9\",\n      borderRadius: 8,\n      padding: 16,\n      width: 350,\n      marginBottom: 18\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Llama\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLlama,\n      children: \"Llama Transcribe (Fuse/Merge)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      style: {\n        marginLeft: 8\n      },\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: llamaOutput,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Llama Output (merged/refined)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n// === Main Dashboard Layout ===\n_s3(LlamaBox, \"RmH30Wo4suDY+DYhQvswX8HD6Vs=\");\n_c3 = LlamaBox;\nconst AudioTranscriptionDashboard = () => {\n  _s4();\n  const [webTranscript, setWebTranscript] = useState(\"\");\n  const [whisperTranscript, setWhisperTranscript] = useState(\"\");\n  const handleClearAll = () => {\n    setWebTranscript(\"\");\n    setWhisperTranscript(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medical E.V.A.N.S\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Medical- Empathetic Voice-over Assistant for Nurturing Symptomatologist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transcription Components:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 16,\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(WebSpeechBox, {\n        webTranscript: webTranscript,\n        setWebTranscript: setWebTranscript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WhisperBox, {\n        whisperTranscript: whisperTranscript,\n        setWhisperTranscript: setWhisperTranscript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LlamaBox, {\n        webTranscript: webTranscript,\n        whisperTranscript: whisperTranscript,\n        onClearAll: handleClearAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s4(AudioTranscriptionDashboard, \"CqjZgB6C6S4rFrPD5j5cF/NapAw=\");\n_c4 = AudioTranscriptionDashboard;\nexport default AudioTranscriptionDashboard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"WebSpeechBox\");\n$RefreshReg$(_c2, \"WhisperBox\");\n$RefreshReg$(_c3, \"LlamaBox\");\n$RefreshReg$(_c4, \"AudioTranscriptionDashboard\");","map":{"version":3,"names":["React","useState","useRef","useSpeechToText","jsxDEV","_jsxDEV","WebSpeechBox","webTranscript","setWebTranscript","_s","transcript","listening","startListening","stopListening","isBrowserSupported","clearTranscript","useEffect","style","border","borderRadius","padding","width","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","value","readOnly","minHeight","marginTop","placeholder","_c","WhisperBox","whisperTranscript","setWhisperTranscript","_s2","recording","setRecording","audioBlob","setAudioBlob","output","setOutput","mediaRecorderRef","audioChunksRef","handleStart","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","current","ondataavailable","e","push","data","onstop","blob","Blob","type","getTracks","forEach","track","stop","start","handleStop","handleTranscribe","alert","formData","FormData","append","res","fetch","method","body","json","whisper_transcript","final_transcript","handleClear","controls","src","URL","createObjectURL","_c2","LlamaBox","onClearAll","_s3","llamaOutput","setLlamaOutput","handleLlama","marginLeft","_c3","AudioTranscriptionDashboard","_s4","handleClearAll","display","gap","flexWrap","_c4","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/0- UT PGP AIML/project-evans/frontend/src/components/AudioTranscriptionDashboard.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useSpeechToText } from \"../hooks/useSpeechToText\";\r\n\r\n// === Web Speech Box ===\r\nconst WebSpeechBox = ({ webTranscript, setWebTranscript }) => {\r\n  const { transcript, listening, startListening, stopListening, isBrowserSupported, clearTranscript } = useSpeechToText(\"en-US\");\r\n\r\n  // Sync transcript to parent when it changes\r\n  React.useEffect(() => {\r\n    setWebTranscript(transcript);\r\n  }, [transcript, setWebTranscript]);\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid #0074d9\", borderRadius: 8, padding: 16, width: 350, marginBottom: 18 }}>\r\n      <h3>Web Speech</h3>\r\n      <button onClick={startListening} disabled={listening || !isBrowserSupported}>Start</button>\r\n      <button onClick={stopListening} disabled={!listening}>Stop</button>\r\n      <button onClick={clearTranscript}>Clear</button>\r\n      <br />\r\n      <textarea\r\n        value={webTranscript}\r\n        readOnly\r\n        style={{ width: \"100%\", minHeight: 60, marginTop: 8 }}\r\n        placeholder=\"Web Speech Output\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// === Whisper Box ===\r\nconst WhisperBox = ({ whisperTranscript, setWhisperTranscript }) => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null);\r\n  const [output, setOutput] = useState(\"\");\r\n\r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n  const audioChunksRef = useRef<Blob[]>([]);\r\n\r\n  const handleStart = async () => {\r\n    setOutput(\"\");\r\n    setAudioBlob(null);\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const recorder = new MediaRecorder(stream);\r\n    mediaRecorderRef.current = recorder;\r\n    audioChunksRef.current = [];\r\n\r\n    recorder.ondataavailable = (e: BlobEvent) => audioChunksRef.current.push(e.data);\r\n    recorder.onstop = () => {\r\n      const blob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n      setAudioBlob(blob);\r\n      stream.getTracks().forEach(track => track.stop());\r\n    };\r\n    recorder.start();\r\n    setRecording(true);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleTranscribe = async () => {\r\n    if (!audioBlob) return alert(\"Record audio first!\");\r\n    setOutput(\"Transcribing...\");\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", audioBlob, \"audio.wav\");\r\n    formData.append(\"web_transcript\", \"\"); // not used for Whisper\r\n    const res = await fetch(\"http://localhost:8080/api/transcribe?use_webspeech=0&use_whisper=1&use_llama=0\", {\r\n      method: \"POST\",\r\n      body: formData\r\n    });\r\n    const data = await res.json();\r\n    setOutput(data.whisper_transcript || data.final_transcript || \"[no output]\");\r\n    setWhisperTranscript(data.whisper_transcript || data.final_transcript || \"\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setAudioBlob(null);\r\n    setOutput(\"\");\r\n    setWhisperTranscript(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid #2ecc40\", borderRadius: 8, padding: 16, width: 350, marginBottom: 18 }}>\r\n      <h3>Whisper</h3>\r\n      <button onClick={handleStart} disabled={recording}>Record</button>\r\n      <button onClick={handleStop} disabled={!recording}>Stop</button>\r\n      <button onClick={handleClear}>Clear</button>\r\n      <button onClick={handleTranscribe} disabled={!audioBlob}>Transcribe</button>\r\n      <br />\r\n      <textarea\r\n        value={output}\r\n        readOnly\r\n        style={{ width: \"100%\", minHeight: 60, marginTop: 8 }}\r\n        placeholder=\"Whisper Output\"\r\n      />\r\n      {audioBlob && <audio controls src={URL.createObjectURL(audioBlob)} />}\r\n    </div>\r\n  );\r\n};\r\n\r\n// === Llama Box (uses both transcripts directly, no input fields!) ===\r\nconst LlamaBox = ({ webTranscript, whisperTranscript, onClearAll }) => {\r\n  const [llamaOutput, setLlamaOutput] = useState(\"\");\r\n\r\n  const handleLlama = async () => {\r\n    if (!webTranscript && !whisperTranscript) {\r\n      alert(\"No transcript available!\");\r\n      return;\r\n    }\r\n    setLlamaOutput(\"Processing...\");\r\n    // Dummy audio for API requirement (not actually used here)\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", new Blob(), \"blank.wav\");\r\n    formData.append(\"web_transcript\", webTranscript);\r\n    formData.append(\"whisper_transcript\", whisperTranscript);\r\n\r\n    // Use your backend to merge/fuse\r\n    const res = await fetch(\"http://localhost:8080/api/llama_fuse\", {\r\n      method: \"POST\",\r\n      body: formData\r\n    });\r\n    const data = await res.json();\r\n    setLlamaOutput(data.final_transcript || \"[no output]\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setLlamaOutput(\"\");\r\n    onClearAll();\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid #b10dc9\", borderRadius: 8, padding: 16, width: 350, marginBottom: 18 }}>\r\n      <h3>Llama</h3>\r\n      <button onClick={handleLlama}>Llama Transcribe (Fuse/Merge)</button>\r\n      <button onClick={handleClear} style={{ marginLeft: 8 }}>Clear</button>\r\n      <br />\r\n      <textarea\r\n        value={llamaOutput}\r\n        readOnly\r\n        style={{ width: \"100%\", minHeight: 60, marginTop: 8 }}\r\n        placeholder=\"Llama Output (merged/refined)\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// === Main Dashboard Layout ===\r\nconst AudioTranscriptionDashboard = () => {\r\n  const [webTranscript, setWebTranscript] = useState(\"\");\r\n  const [whisperTranscript, setWhisperTranscript] = useState(\"\");\r\n\r\n  const handleClearAll = () => {\r\n    setWebTranscript(\"\");\r\n    setWhisperTranscript(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Medical E.V.A.N.S</h1>\r\n      <h2>Medical- Empathetic Voice-over Assistant for Nurturing Symptomatologist</h2>\r\n      <h3>Transcription Components:</h3>\r\n      <div style={{ display: \"flex\", gap: 16, flexWrap: \"wrap\" }}>\r\n        <WebSpeechBox webTranscript={webTranscript} setWebTranscript={setWebTranscript} />\r\n        <WhisperBox whisperTranscript={whisperTranscript} setWhisperTranscript={setWhisperTranscript} />\r\n        <LlamaBox\r\n          webTranscript={webTranscript}\r\n          whisperTranscript={whisperTranscript}\r\n          onClearAll={handleClearAll}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioTranscriptionDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}