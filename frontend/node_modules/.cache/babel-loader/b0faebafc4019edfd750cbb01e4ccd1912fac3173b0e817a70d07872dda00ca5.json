{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nexport function useSpeechToText(lang = \"en-US\") {\n  _s();\n  const [listening, setListening] = useState(false);\n  const [transcript, setTranscript] = useState(\"\");\n  const recognitionRef = useRef(null);\n  const isBrowserSupported = !!(window.SpeechRecognition || window.webkitSpeechRecognition);\n  function startListening() {\n    if (!isBrowserSupported) return;\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.lang = lang;\n    recognition.interimResults = false;\n    recognition.onresult = event => {\n      const result = Array.from(event.results).map(res => res[0].transcript).join(\" \");\n      setTranscript(result);\n    };\n    recognition.onend = () => setListening(false);\n    recognitionRef.current = recognition;\n    recognition.start();\n    setListening(true);\n  }\n  function stopListening() {\n    recognitionRef.current && recognitionRef.current.stop();\n    setListening(false);\n  }\n  return {\n    transcript,\n    listening,\n    startListening,\n    stopListening,\n    isBrowserSupported\n  };\n}\n_s(useSpeechToText, \"pEVBSzM8KGmQwxNnRrcCszUGG4Y=\");","map":{"version":3,"names":["useState","useRef","useSpeechToText","lang","_s","listening","setListening","transcript","setTranscript","recognitionRef","isBrowserSupported","window","SpeechRecognition","webkitSpeechRecognition","startListening","recognition","interimResults","onresult","event","result","Array","from","results","map","res","join","onend","current","start","stopListening","stop"],"sources":["C:/Users/ASUS/Documents/0- UT PGP AIML/project-evans/frontend/src/hooks/useSpeechToText.tsx"],"sourcesContent":["import { useState, useRef } from \"react\";\r\n\r\nexport function useSpeechToText(lang: string = \"en-US\") {\r\n  const [listening, setListening] = useState(false);\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  const isBrowserSupported = !!(window.SpeechRecognition || window.webkitSpeechRecognition);\r\n\r\n  function startListening() {\r\n    if (!isBrowserSupported) return;\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = lang;\r\n    recognition.interimResults = false;\r\n    recognition.onresult = (event: any) => {\r\n      const result = Array.from(event.results)\r\n        .map((res: any) => res[0].transcript)\r\n        .join(\" \");\r\n      setTranscript(result);\r\n    };\r\n    recognition.onend = () => setListening(false);\r\n    recognitionRef.current = recognition;\r\n    recognition.start();\r\n    setListening(true);\r\n  }\r\n\r\n  function stopListening() {\r\n    recognitionRef.current && recognitionRef.current.stop();\r\n    setListening(false);\r\n  }\r\n\r\n  return { transcript, listening, startListening, stopListening, isBrowserSupported };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAExC,OAAO,SAASC,eAAeA,CAACC,IAAY,GAAG,OAAO,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMS,cAAc,GAAGR,MAAM,CAAM,IAAI,CAAC;EAExC,MAAMS,kBAAkB,GAAG,CAAC,EAAEC,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB,CAAC;EAEzF,SAASC,cAAcA,CAAA,EAAG;IACxB,IAAI,CAACJ,kBAAkB,EAAE;IACzB,MAAME,iBAAiB,GAAGD,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB;IACpF,MAAME,WAAW,GAAG,IAAIH,iBAAiB,CAAC,CAAC;IAC3CG,WAAW,CAACZ,IAAI,GAAGA,IAAI;IACvBY,WAAW,CAACC,cAAc,GAAG,KAAK;IAClCD,WAAW,CAACE,QAAQ,GAAIC,KAAU,IAAK;MACrC,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,OAAO,CAAC,CACrCC,GAAG,CAAEC,GAAQ,IAAKA,GAAG,CAAC,CAAC,CAAC,CAACjB,UAAU,CAAC,CACpCkB,IAAI,CAAC,GAAG,CAAC;MACZjB,aAAa,CAACW,MAAM,CAAC;IACvB,CAAC;IACDJ,WAAW,CAACW,KAAK,GAAG,MAAMpB,YAAY,CAAC,KAAK,CAAC;IAC7CG,cAAc,CAACkB,OAAO,GAAGZ,WAAW;IACpCA,WAAW,CAACa,KAAK,CAAC,CAAC;IACnBtB,YAAY,CAAC,IAAI,CAAC;EACpB;EAEA,SAASuB,aAAaA,CAAA,EAAG;IACvBpB,cAAc,CAACkB,OAAO,IAAIlB,cAAc,CAACkB,OAAO,CAACG,IAAI,CAAC,CAAC;IACvDxB,YAAY,CAAC,KAAK,CAAC;EACrB;EAEA,OAAO;IAAEC,UAAU;IAAEF,SAAS;IAAES,cAAc;IAAEe,aAAa;IAAEnB;EAAmB,CAAC;AACrF;AAACN,EAAA,CA/BeF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}