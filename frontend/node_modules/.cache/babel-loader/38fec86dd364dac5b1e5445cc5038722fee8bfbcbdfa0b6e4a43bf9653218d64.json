{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\0- UT PGP AIML\\\\project-evans\\\\frontend\\\\src\\\\components\\\\AudioTranscriptionDashboard.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useSpeechToText } from \"../hooks/useSpeechToText\";\n\n// --- Web Speech Box ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSpeechBox = () => {\n  _s();\n  const {\n    transcript,\n    listening,\n    startListening,\n    stopListening,\n    isBrowserSupported,\n    clearTranscript\n  } = useSpeechToText(\"en-US\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px dashed #888\",\n      borderRadius: 10,\n      margin: 12,\n      padding: 14,\n      width: 350\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Web Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startListening,\n      disabled: listening || !isBrowserSupported,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopListening,\n      disabled: !listening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearTranscript,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: transcript,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Web Speech Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Whisper Box ---\n_s(WebSpeechBox, \"qYieXlwXgipum6l+KKum5ZsleOA=\", false, function () {\n  return [useSpeechToText];\n});\n_c = WebSpeechBox;\nconst WhisperBox = () => {\n  _s2();\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [output, setOutput] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const handleStart = async () => {\n    setOutput(\"\");\n    setAudioBlob(null);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const recorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = recorder;\n    audioChunksRef.current = [];\n    recorder.ondataavailable = e => audioChunksRef.current.push(e.data);\n    recorder.onstop = () => {\n      const blob = new Blob(audioChunksRef.current, {\n        type: \"audio/wav\"\n      });\n      setAudioBlob(blob);\n      stream.getTracks().forEach(track => track.stop());\n    };\n    recorder.start();\n    setRecording(true);\n  };\n  const handleStop = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  const handleTranscribe = async () => {\n    if (!audioBlob) return alert(\"Record audio first!\");\n    const formData = new FormData();\n    formData.append(\"audio\", audioBlob, \"audio.wav\");\n    formData.append(\"web_transcript\", \"\");\n    const res = await fetch(\"http://localhost:8080/api/transcribe?use_webspeech=0&use_whisper=1&use_llama=0\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setOutput(data.whisper_transcript || data.final_transcript || \"[no output]\");\n  };\n  const handleClear = () => {\n    setAudioBlob(null);\n    setOutput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px dashed #888\",\n      borderRadius: 10,\n      margin: 12,\n      padding: 14,\n      width: 350\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Whisper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      disabled: recording,\n      children: \"Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      disabled: !recording,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranscribe,\n      disabled: !audioBlob,\n      children: \"Transcribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: output,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Whisper Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      src: URL.createObjectURL(audioBlob)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Llama Box (Direct Transcribe) ---\n_s2(WhisperBox, \"3humosjixi9bIaM3r+4k5Sped9E=\");\n_c2 = WhisperBox;\nconst LlamaBox = () => {\n  _s3();\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [output, setOutput] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const handleStart = async () => {\n    setOutput(\"\");\n    setAudioBlob(null);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const recorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = recorder;\n    audioChunksRef.current = [];\n    recorder.ondataavailable = e => audioChunksRef.current.push(e.data);\n    recorder.onstop = () => {\n      const blob = new Blob(audioChunksRef.current, {\n        type: \"audio/wav\"\n      });\n      setAudioBlob(blob);\n      stream.getTracks().forEach(track => track.stop());\n    };\n    recorder.start();\n    setRecording(true);\n  };\n  const handleStop = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  const handleTranscribe = async () => {\n    if (!audioBlob) return alert(\"Record audio first!\");\n    const formData = new FormData();\n    formData.append(\"audio\", audioBlob, \"audio.wav\");\n    formData.append(\"web_transcript\", \"\");\n    // Llama will do direct transcription on backend (no merge/fuse, just \"llama only\")\n    const res = await fetch(\"http://localhost:8080/api/transcribe?use_webspeech=0&use_whisper=0&use_llama=1\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setOutput(data.final_transcript || \"[no output]\");\n  };\n  const handleClear = () => {\n    setAudioBlob(null);\n    setOutput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px dashed #888\",\n      borderRadius: 10,\n      margin: 12,\n      padding: 14,\n      width: 350\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Llama\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      disabled: recording,\n      children: \"Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      disabled: !recording,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranscribe,\n      disabled: !audioBlob,\n      children: \"Transcribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: output,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        minHeight: 60,\n        marginTop: 8\n      },\n      placeholder: \"Llama Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      src: URL.createObjectURL(audioBlob)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s3(LlamaBox, \"3humosjixi9bIaM3r+4k5Sped9E=\");\n_c3 = LlamaBox;\nconst AudioTranscriptionDashboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Medical E.V.A.N.S\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Medical- Empathetic Voice-over Assistant for Nurturing Symptomatologist\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Transcription Components:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(WebSpeechBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WhisperBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LlamaBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 169,\n  columnNumber: 3\n}, this);\n_c4 = AudioTranscriptionDashboard;\nexport default AudioTranscriptionDashboard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"WebSpeechBox\");\n$RefreshReg$(_c2, \"WhisperBox\");\n$RefreshReg$(_c3, \"LlamaBox\");\n$RefreshReg$(_c4, \"AudioTranscriptionDashboard\");","map":{"version":3,"names":["React","useState","useRef","useSpeechToText","jsxDEV","_jsxDEV","WebSpeechBox","_s","transcript","listening","startListening","stopListening","isBrowserSupported","clearTranscript","style","border","borderRadius","margin","padding","width","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","value","readOnly","minHeight","marginTop","placeholder","_c","WhisperBox","_s2","recording","setRecording","audioBlob","setAudioBlob","output","setOutput","mediaRecorderRef","audioChunksRef","handleStart","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","current","ondataavailable","e","push","data","onstop","blob","Blob","type","getTracks","forEach","track","stop","start","handleStop","handleTranscribe","alert","formData","FormData","append","res","fetch","method","body","json","whisper_transcript","final_transcript","handleClear","controls","src","URL","createObjectURL","_c2","LlamaBox","_s3","_c3","AudioTranscriptionDashboard","_c4","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/0- UT PGP AIML/project-evans/frontend/src/components/AudioTranscriptionDashboard.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useSpeechToText } from \"../hooks/useSpeechToText\";\r\n\r\n// --- Web Speech Box ---\r\nconst WebSpeechBox = () => {\r\n  const {\r\n    transcript, listening, startListening, stopListening, isBrowserSupported, clearTranscript\r\n  } = useSpeechToText(\"en-US\");\r\n\r\n  return (\r\n    <div style={{ border: \"2px dashed #888\", borderRadius: 10, margin: 12, padding: 14, width: 350 }}>\r\n      <h3>Web Speech</h3>\r\n      <button onClick={startListening} disabled={listening || !isBrowserSupported}>Start</button>\r\n      <button onClick={stopListening} disabled={!listening}>Stop</button>\r\n      <button onClick={clearTranscript}>Clear</button>\r\n      <br />\r\n      <textarea\r\n        value={transcript}\r\n        readOnly\r\n        style={{ width: \"100%\", minHeight: 60, marginTop: 8 }}\r\n        placeholder=\"Web Speech Output\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- Whisper Box ---\r\nconst WhisperBox = () => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null);\r\n  const [output, setOutput] = useState(\"\");\r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n  const audioChunksRef = useRef<Blob[]>([]);\r\n\r\n  const handleStart = async () => {\r\n    setOutput(\"\");\r\n    setAudioBlob(null);\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const recorder = new MediaRecorder(stream);\r\n    mediaRecorderRef.current = recorder;\r\n    audioChunksRef.current = [];\r\n\r\n    recorder.ondataavailable = (e: BlobEvent) => audioChunksRef.current.push(e.data);\r\n    recorder.onstop = () => {\r\n      const blob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n      setAudioBlob(blob);\r\n      stream.getTracks().forEach(track => track.stop());\r\n    };\r\n    recorder.start();\r\n    setRecording(true);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleTranscribe = async () => {\r\n    if (!audioBlob) return alert(\"Record audio first!\");\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", audioBlob, \"audio.wav\");\r\n    formData.append(\"web_transcript\", \"\");\r\n    const res = await fetch(\"http://localhost:8080/api/transcribe?use_webspeech=0&use_whisper=1&use_llama=0\", {\r\n      method: \"POST\",\r\n      body: formData\r\n    });\r\n    const data = await res.json();\r\n    setOutput(data.whisper_transcript || data.final_transcript || \"[no output]\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setAudioBlob(null);\r\n    setOutput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"2px dashed #888\", borderRadius: 10, margin: 12, padding: 14, width: 350 }}>\r\n      <h3>Whisper</h3>\r\n      <button onClick={handleStart} disabled={recording}>Record</button>\r\n      <button onClick={handleStop} disabled={!recording}>Stop</button>\r\n      <button onClick={handleClear}>Clear</button>\r\n      <button onClick={handleTranscribe} disabled={!audioBlob}>Transcribe</button>\r\n      <br />\r\n      <textarea\r\n        value={output}\r\n        readOnly\r\n        style={{ width: \"100%\", minHeight: 60, marginTop: 8 }}\r\n        placeholder=\"Whisper Output\"\r\n      />\r\n      {audioBlob && <audio controls src={URL.createObjectURL(audioBlob)} />}\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- Llama Box (Direct Transcribe) ---\r\nconst LlamaBox = () => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null);\r\n  const [output, setOutput] = useState(\"\");\r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n  const audioChunksRef = useRef<Blob[]>([]);\r\n\r\n  const handleStart = async () => {\r\n    setOutput(\"\");\r\n    setAudioBlob(null);\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const recorder = new MediaRecorder(stream);\r\n    mediaRecorderRef.current = recorder;\r\n    audioChunksRef.current = [];\r\n\r\n    recorder.ondataavailable = (e: BlobEvent) => audioChunksRef.current.push(e.data);\r\n    recorder.onstop = () => {\r\n      const blob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n      setAudioBlob(blob);\r\n      stream.getTracks().forEach(track => track.stop());\r\n    };\r\n    recorder.start();\r\n    setRecording(true);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleTranscribe = async () => {\r\n    if (!audioBlob) return alert(\"Record audio first!\");\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", audioBlob, \"audio.wav\");\r\n    formData.append(\"web_transcript\", \"\");\r\n    // Llama will do direct transcription on backend (no merge/fuse, just \"llama only\")\r\n    const res = await fetch(\"http://localhost:8080/api/transcribe?use_webspeech=0&use_whisper=0&use_llama=1\", {\r\n      method: \"POST\",\r\n      body: formData\r\n    });\r\n    const data = await res.json();\r\n    setOutput(data.final_transcript || \"[no output]\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setAudioBlob(null);\r\n    setOutput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"2px dashed #888\", borderRadius: 10, margin: 12, padding: 14, width: 350 }}>\r\n      <h3>Llama</h3>\r\n      <button onClick={handleStart} disabled={recording}>Record</button>\r\n      <button onClick={handleStop} disabled={!recording}>Stop</button>\r\n      <button onClick={handleClear}>Clear</button>\r\n      <button onClick={handleTranscribe} disabled={!audioBlob}>Transcribe</button>\r\n      <br />\r\n      <textarea\r\n        value={output}\r\n        readOnly\r\n        style={{ width: \"100%\", minHeight: 60, marginTop: 8 }}\r\n        placeholder=\"Llama Output\"\r\n      />\r\n      {audioBlob && <audio controls src={URL.createObjectURL(audioBlob)} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AudioTranscriptionDashboard = () => (\r\n  <div>\r\n    <h1>Medical E.V.A.N.S</h1>\r\n    <h2>Medical- Empathetic Voice-over Assistant for Nurturing Symptomatologist</h2>\r\n    <h3>Transcription Components:</h3>\r\n    <div>\r\n      <WebSpeechBox />\r\n      <WhisperBox />\r\n      <LlamaBox />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default AudioTranscriptionDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}